services:
  postgres_biblioteca:
    image: postgres:16
    container_name: postgres_biblioteca
    environment:
      TZ: America/Sao_Paulo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      biblioteca-network:
        ipv4_address: 172.20.0.2
    healthcheck:
      test: pg_isready -U postgres -d postgres
      interval: 10s
      timeout: 3s
      retries: 3

  pgadmin_biblioteca:
    container_name: pgadmin_biblioteca
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@postgres.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      UID: 1000
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    networks:
      biblioteca-network:
        ipv4_address: 172.20.0.3

  biblioteca_backend:
    container_name: biblioteca_backend
    build: 
      context: ../backend
      dockerfile: Dockerfile
    image: biblioteca_backend
    ports:
      - "3000:3000"
    depends_on:
      postgres_biblioteca:
        condition: service_healthy
    environment:
      DB_HOST: postgres_biblioteca
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: biblioteca
    networks:
      biblioteca-network:
        ipv4_address: 172.20.0.4

  biblioteca_frontend:
    container_name: biblioteca_frontend
    build: 
      context: ../frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: http://localhost:3000
        PORT: 3000
    image: biblioteca_frontend
    ports:
      - "8080:3000"
    depends_on:
      - biblioteca_backend
    networks:
      - biblioteca-network

networks:
  biblioteca-network:
    name: biblioteca-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.20.0.0/24"
